{"version":3,"file":"static/webpack/static/development/pages/login.js.c3c5ab6f75ab39995bf6.hot-update.js","sources":["webpack:///./images/LoginNew/banner1.png","webpack:///./images/LoginNew/banner2.png","webpack:///./images/LoginNew/banner3.png","webpack:///./pages/login/index.js"],"sourcesContent":["module.exports = \"/_next/static/images/banner1-e7a26caed340d2ebe434d673ad589e4c.png\";","module.exports = \"/_next/static/images/banner2-200e83ab64ae4016bdaf0beb1e3b7e4e.png\";","module.exports = \"/_next/static/images/banner3-9b73f7cff19857a0f5554fd6d7d6ebb3.png\";","import React, { Component } from 'react'\nimport styles from './index.less'\nimport Swiper from \"swiper\";\nimport { Form, Input, Row, Col, Button, Icon, message } from 'antd';\nimport cookie from 'react-cookies'\nimport fetch from 'dva/fetch';\nimport './index.less';\n// import { domain, domainLogin } from \"../../env\"\nimport api from \"../../command/api\";\nimport { routerRedux } from 'dva/router';\nimport createDva from \"../../command/createDva\";\nimport androidImg from '../../images/welcom/PQKJ.png'\nimport IOSimg from '../../images/LoginNew/ios.png'\nimport printImg from '../../images/LoginNew/ic_down.png'\n// import { callbackify } from 'util';\nconst FormItem = Form.Item;\nconst params = (params) => {\n    let arr = []\n    Object.keys(params).forEach((key) => arr.push(key + '=' + params[key]));\n    return arr.join('&')\n}\n\n// @createDva([\"loginNew\"])\nclass LoginNew extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loading: false,\n            tabKey: 1,\n            isPhone: false,\n            btnDefault: false,\n            btnNumber:60\n        };\n        this.codeList = [\n            {txt:'IOS下载',img_src:androidImg},\n            { txt: 'Android下载', img_src: androidImg },\n            // { txt: 'IOS下载', img_src: IOSimg }\n            // {txt:'IOS下载',img_src:androidImg},\n\n        ];\n        this.uploadList = [\n            { txt: '打印程序驱动', img_src: printImg, aUrl: 'https://pan.baidu.com/s/1TEigJIkvUgVkgs51moPbtg' },\n            { txt: '台办驱动', img_src: printImg, aUrl: 'https://pan.baidu.com/s/1fPkDRleG7D9wqRNKuKT_sg' },\n            { txt: '汉印驱动', img_src: printImg, aUrl: 'https://pan.baidu.com/s/1Z303Fp13zfLZKYVCgTHqsQ' },\n            { txt: 'XT300热敏方式打印设置', img_src: printImg, aUrl: 'https://pan.baidu.com/s/11YFLC850pTKib_1Y6AN4Ew' },\n            { txt: '汉印打印机参数设置', img_src: printImg, aUrl: 'https://pan.baidu.com/s/10j_tWzj69N9AURHvS4FtIw' },\n\n        ]\n    }\n\n    componentDidMount() {\n        let swiper = new Swiper('.swiper-container', {\n            autoHeight: true,\n            loop: true,\n            centeredSlides: true,\n            loading: false,\n            autoplay: {\n                delay: 3000\n            }\n        });\n        console.log('swiper----------------', swiper)\n        swiper.autoplay.start()\n        let token = cookie.load('token');\n\n        if (token) {\n            api.send(this, [\n                api.UumUserController_ADMIN(\"loginNew\").infoUsingPOST({})({\n                    onCallBack: res => {\n                        //   if (res.data.uumUser.mobile === '17833334444') {\n                        //     //this.props.dispatch(routerRedux.replace('/NewMain'))\n                        //   }else {\n                        //    // this.props.dispatch(routerRedux.replace('/indexHome'))\n                        //   }\n                        //  this.props.dispatch(routerRedux.replace('/yellowPage'))\n                        //this.getLocationName()\n                        let url = this.getLocationName();\n                        // console.log(url)\n                        //  window.location.href =  url;\n                    },\n                    onError: () => {\n                    }\n                })\n            ]);\n        }\n    }\n\n    renderBodyFootView = () => {\n        const data = ['技术支持：浙江中兴慧农信息科技有限公司']\n        return (\n            <div className={styles.bodyFootView}>\n                {\n                    data.map((e, i) => {\n                        return (\n                            <span key={i} style={{ color: 'white', fontFamily: 'MicrosoftYaHei', fontSize: 14 }}>{e}</span>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n\n    tableChange = (data) => {\n        this.setState({\n            isPhone: data\n        })\n    }\n\n    renderLoginHeader = () => {\n        let isPhone = this.state.isPhone\n\n        return (\n            <div className={styles.loginViewHeader}>\n                <div\n                    className={isPhone ? styles.usrLogin : styles.usrLoginACT}\n                    onClick={() => this.tableChange(false)}\n                >\n                    账号登录\n                </div>\n                <div className={styles.usrLogin}>\n                    |\n                </div>\n                <div\n                    className={isPhone ? styles.usrLoginACT : styles.usrLogin}\n                    onClick={() => this.tableChange(true)}\n                >\n                    手机登录\n                </div>\n            </div>\n        )\n    }\n    getLocationName = () => {\n        const hostname = window.location.hostname;\n        if (hostname.indexOf('nongqibang.com') > -1) {\n            window.location.href = \"http://supe.nongqibang.com:7001/#/welcomThisWay\"\n            // window.location.href = \"http://supe.ztesa.com.cn:7001/#/yellowPage\"\n        } else if (hostname.indexOf('ztesa.com.cn') > 1) {\n            window.location.href = \"http://supe.ztesa.com.cn:7001/#/welcomThisWay\"\n\n        } else {\n            this.props.dispatch(routerRedux.replace('/welcomThisWay'));\n        }\n        return true\n    }\n    onLogin = (e) => {\n\n        e.preventDefault();\n        this.props.form.validateFields((err, val) => {\n            if (!err) {\n                let vals = {\n                    ...val,\n                    randomStr: new Date().getTime(),\n                    code: '1',\n                    grant_type: 'password',\n                    type: 1,\n                    scope: 'server'\n                }\n                // window.location.href = \"http://supe.nongqibang.com:7001/#/welcomThisWay\"\n                // api.send(this, [\n                //     {\n                //         url: \"/auth/oauth/token\",\n                //         method: \"Login\",\n                //         params: vals,\n                //     },\n                //     api.UumUserController_ADMIN('userinfo').infoUsingPOST()({\n                //         tranData: ({ data }) => {\n                //             return { uumUser: data.uumUser, loginType: 1 }\n                //         },\n                //         onCallBack: ({ retData }) => {\n                //             window.localStorage.setItem('deptId',`${retData.uumUser.deptId}` )\n                //             this.getLocationName();\n                //             // cookie.save('loginType', '1', { domain: domain })\n                //         }\n                //     })\n                // ]);\n            }\n        });\n    }\n    renderbtn = () => {\n        //console.log()\n        return (\n            <div className={'login-btn'} style={{ width: '100%' }}>\n                <Button\n                    size={'large'}\n                    type={'primary'}\n                    onClick={this.state.isPhone ? this.onPhoneLogin : this.onLogin}\n                    style={{ width: '100%', backgroundColor: '#3FBA2C', borderRadius: 0, border: 'none' }}\n                    // htmlType={'submit'}\n                    loading={this.state.loading}\n                >\n                    登录\n            </Button>\n            </div>\n        )\n    }\n\n    onPhoneLogin = (e) => {//手机登录按钮点击\n        e.preventDefault();\n        this.props.form.validateFields((err, val) => {\n            if (!err) {\n                api.send(this, [\n                    {\n                        url: \"/api/auth/mobile/token\",\n                        method: \"LoginMobile\",\n                        params: {\n                            mobile: val.username,\n                            code: val.phone,\n                            randomStr: new Date().getTime().toString(),\n                            grant_type: 'mobile',\n                            type: '0',\n                            scopt: 'server'\n                        },\n                    },\n                    api.UumUserController_ADMIN('userinfo').infoUsingPOST()({\n                        tranData: ({ data }) => {\n                            return { uumUser: data.uumUser, loginType: 1 }\n                        },\n                        onCallBack: ({ retData }) => {\n                            console.log('输出userinfo', retData)\n                            this.getLocationName();\n                            cookie.save('loginType', '1', { domain: domain })\n                        }\n                    })\n                ]);\n                // this.props.dispatch({\n                //     type: 'fetch/send', payload: [\n                //         {\n                //             // target: 'ProduceList',\n                //             url: '/auth/mobile/token',\n                //             method: 'LoginMobile',\n                //             params: {\n                //                 mobile: val.username,\n                //                 code: val.phone,\n                //                 randomStr: new Date().getTime().toString(),\n                //                 grant_type: 'mobile',\n                //                 type: '0',\n                //                 scopt: 'server'\n                //             },\n                //             isOnlyNet: true,\n                //             // host: '/zsApi',\n                //             tranData: ({ data }) => {\n                //                 //return {data:data};\n                //             },\n                //         },\n                //     ]\n                // });\n            }\n\n        });\n    }\n\n    getCheckCode = () => {//获得验证码点击事件\n        this.props.form.validateFields((err, val) => {\n            console.log(val)\n            \n\n            this.props.dispatch({\n                type: 'fetch/send', payload: [\n                    {\n                        target: 'ProduceList',\n                        url: '/app/firm/shortMessage/sendMessage',\n                        method: 'POST',\n                        params: {\n                            phoneNumbers: val.username\n                        },\n                        // host: '/zsApi',\n                        tranData: ({ data }) => {\n                            //return {data:data};\n                            this.setState({\n                                btnDefault:true\n                            },() => {\n                                this.Timebtn = setInterval(\n                                    () => {\n                                        if (this.state.btnNumber < 1) {\n                                            clearInterval(this.Timebtn)\n                                            this.setState({\n                                                btnDefault: false,\n                                                btnNumber:60\n                                            })\n                                            return\n                                        }\n\n                                        this.setState({\n                                            btnNumber: this.state.btnNumber - 1,\n                                        })\n                                    },1000\n                                )\n                            })\n                        },\n                    },\n                ]\n            });\n            \n        })\n    }\n\n    renderPhoneForm = () => {//渲染手机登录\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form onSubmit={this.onPhoneLogin} style={{ width: '100%' }}>\n                <div\n                    className={'formItemNew'}\n                    style={{\n                        marginTop: 38,\n                        lineHeight: '24px',\n                        color: '#3A3939',\n                        fontFamily: 'MicrosoftYaHei',\n                        fontWeight: 400,\n                        fontSize: 14\n                    }}\n                >\n                    <span>手机号</span>\n                    <FormItem style={{ marginBottom: 12 }} key={1}>\n                        {getFieldDecorator('username', {\n                            // initialValue: 'admin1',\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入手机号',\n                                },\n                                {\n                                    validator: (rule,val,callback) => {\n                                        if (!/^1(?:3\\d|4[4-9]|5[0-35-9]|6[67]|7[013-8]|8\\d|9\\d)\\d{8}$/.test(val)){\n                                            callback('手机号码格式不正确')\n                                        }\n                                        callback()\n                                    }\n                                }\n                            ],\n                        })(<Input\n                            // prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            size=\"default\"\n                            className={'inputBottom'}\n                            style={{ border: 'none', borderBottom: '1px solid #E5E5E5', borderRadius: 0, }}\n                            placeholder={'请输入您的手机号'} />)}\n                    </FormItem>\n                    <span style={{ display: 'block', }}>输入验证码</span>\n\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            marginBottom: '24px',\n                        }}\n                    >\n                        <FormItem\n                            style={{\n                                marginBottom: '0',\n                            }}\n                        >\n                            {getFieldDecorator('phone')(\n                                <Input\n                                    // prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    className={'inputBottom'}\n                                    onPressEnter={this.onPhoneLogin}\n                                    size=\"default\" placeholder={'请输入验证码'}\n                                    style={{\n                                        width: '250px',\n                                        border: 'none',\n                                        borderBottom: '1px solid #E5E5E5',\n                                        borderRadius: 0,\n                                    }}\n                                    type={'input'} />\n                            )}\n                        </FormItem>\n                        <Button\n                            disabled={this.state.btnDefault}\n                            style={{\n                                backgroundColor: `${this.state.btnDefault ? '#ccc' : 'rgb(63, 186, 44)'}`,\n                                color: '#fff',\n                            }}\n                            onClick={this.getCheckCode} \n                    >\n                            获取验证码{this.state.btnDefault ? `(${this.state.btnNumber})` : ''}\n                    </Button>\n                    </div>\n\n                </div>\n            </Form>\n        )\n    }\n\n    renderForm = () => {//渲染账号登录\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.onLogin} style={{ width: '100%' }}>\n                <div\n                    className={'formItemNew'}\n\n                    style={{\n                        marginTop: 38,\n                        lineHeight: '24px',\n                        color: '#3A3939',\n                        fontFamily: 'MicrosoftYaHei',\n                        fontWeight: 400,\n                        fontSize: 14\n                    }}\n                >\n                    <span>账号</span>\n                    <FormItem style={{ marginBottom: 12 }} key={1}>\n                        {getFieldDecorator('username', {\n                            // initialValue: 'admin1',\n                            rules: [\n                                { required: true, message: '请输入账号' },\n                            ]\n                        })(<Input\n                            // prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            size=\"default\"\n                            className={'inputBottom'}\n                            style={{ border: 'none', borderBottom: '1px solid #E5E5E5', borderRadius: 0, }}\n                            placeholder={'请输入您的账号'} />)}\n                    </FormItem>\n                    <span   >输入密码</span>\n                    <FormItem   >\n                        {getFieldDecorator('password', {\n                            // initialValue: '123456',\n                            rules: [\n                                { required: true, message: '请输入密码' }\n                            ]\n                        })(\n                            <Input\n                                // prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                className={'inputBottom'}\n                                onPressEnter={this.onLogin}\n                                size=\"default\" placeholder={'请输入密码'}\n                                style={{ border: 'none', borderBottom: '1px solid #E5E5E5', borderRadius: 0 }}\n                                type={'password'} />\n                        )}\n                    </FormItem>\n                </div>\n            </Form>\n        )\n    }\n    renderCode = () => {\n        return (\n            <Row style={{ width: '100%', borderTop: '2px dashed rgba(220,220,220,1)', padding: '12px 0', marginTop: 12 }}>\n                {\n                    this.codeList.map((item, i) => (\n                        <Col style={{ textAlign: 'center' }} span={6} offset={i % 3 !== 0 ? 3 : 0}>\n                            <img src={item.img_src} alt={'二维码'} style={{ width: '100%', height: 'auto' }} />\n                            <br />\n                            <span>{item.txt}</span>\n                        </Col>\n                    ))\n                }\n            </Row>\n        )\n    }\n    renderPrint = () => {\n        return (\n            <div>\n                <div style={{ width: '372px', borderTop: '2px dashed  rgba(220,220,220,1)', fontSize: '12px', paddingTop: '3px' }}>\n                    {/*  */}\n                    <p style={{ color: '#999', lineHeight: \"21px\", height: '21px', margin: \"0\" }}>工具下载</p>\n                    <div className={styles.printerDownload}>\n                        <div className={styles.printerDownloadBox}>\n                            {\n                                this.uploadList.map((item, i) => (\n                                    <div key={i} style={{ whiteSpace: 'nowrap', overflow: 'hidden' }}>\n                                        <img\n                                            src={item.img_src || ''}\n                                            alt={'图片'}\n                                            style={{ width: '30px', height: 'auto', paddingRight: '12px' }}\n                                        />\n                                        <a href={item.aUrl} target={'_blank'} style={{ cursor: 'pointer', color: '#3FBA2C' }}>{item.txt}</a>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    {/* <Icon type = {'double-right'}  style = {{color:'#3FBA2C',float:'right',position:'absolute',padding:4,backgroundColor:'#fff'}} /> */}\n                </div>\n\n            </div>\n\n        )\n    }\n    renderBodyRight = () => {\n        let isPhone = this.state.isPhone\n\n        return (\n            <div className={styles.bodyRight}>\n                <div className={styles.loginView}>\n                    {this.renderLoginHeader()}\n                    {/* 列表 */}\n                    {isPhone ? this.renderPhoneForm() : this.renderForm()}\n                    {this.renderbtn()}\n                    {/* 二维码 */}\n                    {this.renderCode()}\n                    {/* 二维码 */}\n                    {this.renderPrint()}\n                </div>\n            </div>\n        )\n    }\n\n    renderBodyLeft = () => {\n        const data = [\n            require('../../images/LoginNew/banner1.png'),\n            require('../../images/LoginNew/banner2.png'),\n            require('../../images/LoginNew/banner3.png')\n        ]\n        const text = ['客服服务：0574-55841200', '技术服务：0574-55843501']\n        // const text = ['技术服务：0574-55843501']\n        return (\n            <div className={styles.bodyLeft}>\n                {/* <div className=\"swiper-no-swiping\"> */}\n                <div className={'swiper-container swiper-no-swiping'} style={{ zIndex: 1, paddingLeft: 30, paddingTop: 20, overflow: 'hidden' }}>\n                    <div className={'swiper-wrapper'}>\n                        {\n                            data.map((e, i) => {\n                                return (\n                                    <div className={'swiper-slide'} key={i}>\n                                        <img src={e} width={470} height={'80%'} />\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                {/* </div> */}\n\n                <div style={{ width: 450, justifyContent: 'space-between', alignItems: 'center', display: 'flex', paddingLeft: 10, paddingRight: 10, marginBottom: 20 }}>\n                    {\n                        text.map((e, i) => {\n                            return (\n                                <span key={i} style={{ fontSize: 14 }}>{e}</span>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className={styles.main}>\n                <div className={styles.bodyView}>\n                    <div className={styles.bodyHeader} />\n                    <div className={styles.body}>\n                        {this.renderBodyLeft()}\n                        {this.renderBodyRight()}\n                    </div>\n                    <div className={styles.bodyFoot} />\n                    {/* 去掉备案号 */}\n                    {this.renderBodyFootView()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(LoginNew)"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA+DA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AA5EA;AA8EA;AACA;AADA;AAGA;AACA;AAlFA;AAoFA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAMA;AAAA;AAIA;AACA;AAAA;AAAA;AAFA;AAQA;AACA;AA1GA;AA2GA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAvHA;AAyHA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA0BA;AACA;AACA;AACA;AAzJA;AA0JA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AANA;AAYA;AACA;AA1KA;AA2KA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAaA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAjOA;AAkOA;AACA;AACA;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","sourceRoot":""}